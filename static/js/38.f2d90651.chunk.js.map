{"version":3,"file":"static/js/38.f2d90651.chunk.js","mappings":"oUAgBIA,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,aAGlCI,EAAgB,CACpBL,MAAO,GACPE,SAAU,IAGCI,EAAQ,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQ,mCAAG,WAAOC,EAAQC,GAAf,0FAEPJ,GAASK,EAAAA,EAAAA,GAAUF,IAFZ,sDAIbC,EAAQE,eAAc,GAJT,OAMfF,EAAQG,YANO,wDAAH,wDAQd,OACE,SAAC,IAAD,CAASC,MAAM,QAAf,UACE,SAAC,KAAD,CACEV,cAAeA,EACfI,SAAUA,EACVO,iBAAkBnB,EAHpB,SAKG,SAAAoB,GAAK,OACJ,SAAC,KAAD,WACE,UAAC,KAAD,CACEC,SAAS,cACTC,WAAW,SACXC,eAAe,SACfC,IAAK,EACLC,cAAc,SALhB,WAOE,SAAC,KAAD,CAAOC,KAAK,QAAZ,SACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,UAAC,KAAD,CACEC,EAAE,UACFC,UAAWF,EAAKG,OAAO5B,OAASyB,EAAKI,QAAQ7B,MAF/C,WAIE,SAAC,KAAD,6BACA,SAAC,MAAD,QACE0B,EAAG,CAAC,KAAM,IAAK,IAAK,KACpBI,YAAY,QACZC,KAAM,SACFP,KAEN,SAAC,KAAD,UAAmBC,EAAKG,OAAO5B,UAZlC,KAiBH,SAAC,KAAD,CAAOuB,KAAK,WAAZ,SACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,UAAC,KAAD,CACEC,EAAE,UACFC,UAAWF,EAAKG,OAAO1B,UAAYuB,EAAKI,QAAQ3B,SAFlD,WAIE,SAAC,KAAD,wBACA,SAAC,MAAD,QACEwB,EAAG,CAAC,KAAM,IAAK,IAAK,KACpBI,YAAY,WACZC,KAAM,YACFP,KAEN,SAAC,KAAD,UAAmBC,EAAKG,OAAO1B,aAZlC,KAiBH,SAAC,KAAD,CACE6B,KAAK,SACLC,UAAWf,EAAMgB,aAFnB,uBA7CA,KAyDb,EAED,W","sources":["pages/Login.jsx"],"sourcesContent":["import {\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n} from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { authLogin } from 'redux/auth/operations/authLogin';\n\nimport { Field, Form, Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport { Section } from 'components/Section/Section';\n\nlet schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(8).max(32).required(),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const Login = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = async (values, actions) => {\n    try {\n      await dispatch(authLogin(values));\n    } catch (error) {\n      actions.setSubmitting(false);\n    }\n    actions.resetForm();\n  };\n  return (\n    <Section title=\"Login\">\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={schema}\n      >\n        {props => (\n          <Form>\n            <Flex\n              minWidth=\"max-content\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              gap={6}\n              flexDirection=\"column\"\n            >\n              <Field name=\"email\">\n                {({ field, form }) => (\n                  <FormControl\n                    w=\"inherit\"\n                    isInvalid={form.errors.email && form.touched.email}\n                  >\n                    <FormLabel>Email address</FormLabel>\n                    <Input\n                      w={[null, 200, 300, 400]}\n                      placeholder=\"email\"\n                      type={'email'}\n                      {...field}\n                    />\n                    <FormErrorMessage>{form.errors.email}</FormErrorMessage>\n                  </FormControl>\n                )}\n              </Field>\n\n              <Field name=\"password\">\n                {({ field, form }) => (\n                  <FormControl\n                    w=\"inherit\"\n                    isInvalid={form.errors.password && form.touched.password}\n                  >\n                    <FormLabel>Password</FormLabel>\n                    <Input\n                      w={[null, 200, 300, 400]}\n                      placeholder=\"password\"\n                      type={'password'}\n                      {...field}\n                    />\n                    <FormErrorMessage>{form.errors.password}</FormErrorMessage>\n                  </FormControl>\n                )}\n              </Field>\n\n              <Button\n                type=\"submit\"\n                isLoading={props.isSubmitting}\n              >\n                Login\n              </Button>\n            </Flex>\n          </Form>\n        )}\n      </Formik>\n    </Section>\n  );\n};\n\nexport default Login;\n"],"names":["schema","yup","shape","email","required","password","min","max","initialValues","Login","dispatch","useDispatch","onSubmit","values","actions","authLogin","setSubmitting","resetForm","title","validationSchema","props","minWidth","alignItems","justifyContent","gap","flexDirection","name","field","form","w","isInvalid","errors","touched","placeholder","type","isLoading","isSubmitting"],"sourceRoot":""}