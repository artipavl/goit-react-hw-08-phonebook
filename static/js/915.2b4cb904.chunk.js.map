{"version":3,"file":"static/js/915.2b4cb904.chunk.js","mappings":"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","sources":["components/Phonebook/Phonebook.jsx","components/Contacts/ContactItem.jsx","components/Contacts/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Button, Flex, FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations/addContact';\n\nexport function Phonebook() {\n  const contacts = useSelector(state => state.contacts.value);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(() =>\n    JSON.parse(window.localStorage.getItem('name'))\n      ? JSON.parse(window.localStorage.getItem('name'))\n      : ''\n  );\n  const [number, setNumber] = useState(() =>\n    JSON.parse(window.localStorage.getItem('number'))\n      ? JSON.parse(window.localStorage.getItem('number'))\n      : ''\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem('name', JSON.stringify(name));\n  }, [name]);\n\n  useEffect(() => {\n    window.localStorage.setItem('number', JSON.stringify(number));\n  }, [number]);\n\n  const submitForm = async e => {\n    e.preventDefault();\n    const submitButton = e.currentTarget.elements.submitButton;\n    submitButton.disabled = true;\n    for (const contact of contacts) {\n      if (contact.name.toLowerCase() === name.toLowerCase()) {\n        alert(`${name} is already in contacts.`);\n        submitButton.disabled = false;\n        return;\n      }\n    }\n    try {\n      await dispatch(addContact({ name, number }));\n      submitButton.disabled = false;\n    } catch (error) {\n      console.log(error);\n      submitButton.disabled = false;\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  const changeForm = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form onSubmit={submitForm}>\n      <Flex\n        minWidth=\"max-content\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        gap={6}\n        flexDirection=\"column\"\n      >\n        <FormControl w=\"inherit\">\n          <FormLabel>Name</FormLabel>\n          <Input\n            w={[null, 200, 300, 400]}\n            value={name}\n            onChange={changeForm}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormControl>\n        <FormControl w=\"inherit\">\n          <FormLabel>Number</FormLabel>\n          <Input\n            w={[null, 200, 300, 400]}\n            value={number}\n            onChange={changeForm}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormControl>\n        <Button type=\"submit\" name=\"submitButton\">\n          add contacts\n        </Button>\n      </Flex>\n    </form>\n  );\n}\n","import { DeleteIcon } from '@chakra-ui/icons';\nimport { Box, Flex, IconButton, ListItem, Text } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations/deleteContact';\n\nexport const ContactItem = ({ contact }) => {\n  const { name, number, id } = contact;\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const onButtonClick = async (e, id) => {\n    setIsLoading(true);\n    try {\n      await dispatch(deleteContact(id));\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <ListItem>\n      <Flex\n        // alignItems=\"center\"\n        // justifyContent=\"center\"\n        justify=\"space-between\"\n        gap={4}\n      >\n        <Box display=\"flex\" alignItems=\"center\">\n          <Text as=\"span\" maxWidth={['70px', '300px', '400px']} noOfLines={1}>\n            {name}\n          </Text>\n          <Text as=\"span\" maxWidth={['140px', '300px', '400px']} noOfLines={1}>\n            : {number}\n          </Text>\n        </Box>\n\n        <IconButton\n          type=\"button\"\n          onClick={e => onButtonClick(e, id)}\n          aria-label=\"Delete\"\n          isLoading={isLoading}\n          icon={<DeleteIcon />}\n        />\n      </Flex>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { Flex, List } from '@chakra-ui/react';\nimport { ContactItem } from 'components/Contacts/ContactItem';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.value);\n  const filter = useSelector(state => state.filter.value);\n\n  const contactsFil = useMemo(\n    () =>\n      filter\n        ? contacts.filter(({ name }) =>\n            name.toLowerCase().includes(filter.toLowerCase())\n          )\n        : contacts,\n    [contacts, filter]\n  );\n  return (\n    <Flex\n      minWidth=\"max-content\"\n      // alignItems=\"center\"\n      // justifyContent=\"center\"\n\n      gap={2}\n      flexDirection=\"column\"\n      \n    >\n      {contactsFil && (\n        <List spacing={4}>\n          {contactsFil.map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n        </List>\n      )}\n    </Flex>\n  );\n};\n","import { Flex, FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFiltre } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filter.value);\n  const dispatch = useDispatch();\n\n  return (\n    <Flex\n      minWidth=\"max-content\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      gap={2}\n      flexDirection=\"column\"\n      marginBottom={4}\n    >\n      <FormControl w=\"inherit\">\n        <FormLabel>Find contacts by name</FormLabel>\n        <Input\n          w={[null, 200, 300, 400]}\n          value={filter}\n          onChange={e => dispatch(changeFiltre(e.target.value))}\n          type=\"text\"\n          name=\"filter\"\n          title=\"filter\"\n          required\n        />\n      </FormControl>\n    </Flex>\n  );\n};\n","import { Section } from 'components/Section/Section';\nimport { Phonebook } from 'components/Phonebook/Phonebook';\nimport { ContactList } from 'components/Contacts/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchAll } from 'redux/contacts/operations/fetchAll';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  \n  useEffect(() => {\n    isLoggedIn && dispatch(fetchAll());\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <Phonebook />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n};\n\nexport default Contacts;"],"names":["Phonebook","contacts","useSelector","state","value","dispatch","useDispatch","useState","JSON","parse","window","localStorage","getItem","name","setName","number","setNumber","useEffect","setItem","stringify","submitForm","e","preventDefault","submitButton","currentTarget","elements","disabled","toLowerCase","alert","addContact","console","log","changeForm","target","onSubmit","minWidth","alignItems","justifyContent","gap","flexDirection","w","onChange","type","pattern","title","required","ContactItem","contact","id","isLoading","setIsLoading","onButtonClick","deleteContact","justify","display","as","maxWidth","noOfLines","onClick","icon","ContactList","filter","contactsFil","useMemo","includes","spacing","map","Filter","marginBottom","changeFiltre","isLoggedIn","auth","fetchAll","Section"],"sourceRoot":""}