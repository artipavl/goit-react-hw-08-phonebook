{"version":3,"file":"static/js/915.1d047e51.chunk.js","mappings":"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","sources":["components/Phonebook/Phonebook.jsx","components/Contacts/ContactItem.jsx","components/Contacts/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import {\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  useToast,\n} from '@chakra-ui/react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Field, Form, Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport { addContact } from 'redux/contacts/operations/addContact';\n\nlet schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n      'Name is not valid'\n    )\n    .required(),\n  number: yup.string().required(),\n});\n\nexport const Phonebook = () => {\n  const contacts = useSelector(state => state.contacts.value);\n  const dispatch = useDispatch();\n  const toast = useToast();\n\n  const [name, setName] = useState(() =>\n    JSON.parse(window.localStorage.getItem('name'))\n      ? JSON.parse(window.localStorage.getItem('name'))\n      : ''\n  );\n  const [number, setNumber] = useState(() =>\n    JSON.parse(window.localStorage.getItem('number'))\n      ? JSON.parse(window.localStorage.getItem('number'))\n      : ''\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem('name', JSON.stringify(name));\n  }, [name]);\n\n  useEffect(() => {\n    window.localStorage.setItem('number', JSON.stringify(number));\n  }, [number]);\n\n  const changeForm = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onSubmit = async (values, actions) => {\n    for (const contact of contacts) {\n      if (contact.name.toLowerCase() === values.name.toLowerCase()) {\n        toast({\n          title: 'Error',\n          description: `${values.name} is already in contacts.`,\n          status: 'error',\n          duration: 3000,\n          isClosable: true,\n          position: 'top-right',\n        });\n        actions.setSubmitting(false);\n        return;\n      }\n    }\n    try {\n      await dispatch(addContact(values));\n      setName('');\n      setNumber('');\n      actions.resetForm();\n    } catch (error) {\n      actions.setSubmitting(false);\n    }\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{ name, number }}\n        onSubmit={onSubmit}\n        validationSchema={schema}\n      >\n        {props => (\n          <Form onChange={changeForm}>\n            <Flex\n              minWidth=\"max-content\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              gap={6}\n              flexDirection=\"column\"\n            >\n              <Field name=\"name\">\n                {({ field, form }) => (\n                  <FormControl\n                    w=\"inherit\"\n                    isInvalid={form.errors.name && form.touched.name}\n                  >\n                    <FormLabel>Name</FormLabel>\n                    <Input\n                      w={[null, 200, 300, 400]}\n                      placeholder=\"name\"\n                      // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                      type={'text'}\n                      {...field}\n                    />\n                    <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n                  </FormControl>\n                )}\n              </Field>\n\n              <Field name=\"number\">\n                {({ field, form }) => (\n                  <FormControl\n                    w=\"inherit\"\n                    isInvalid={form.errors.number && form.touched.number}\n                  >\n                    <FormLabel>Number</FormLabel>\n                    <Input\n                      w={[null, 200, 300, 400]}\n                      placeholder=\"number\"\n                      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                      type={'text'}\n                      // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                      {...field}\n                    />\n                    <FormErrorMessage>{form.errors.number}</FormErrorMessage>\n                  </FormControl>\n                )}\n              </Field>\n\n              <Button type=\"submit\" isLoading={props.isSubmitting}>\n                add contacts\n              </Button>\n            </Flex>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","import { DeleteIcon } from '@chakra-ui/icons';\nimport { Box, Flex, IconButton, ListItem, Text } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations/deleteContact';\n\nexport const ContactItem = ({ contact }) => {\n  const { name, number, id } = contact;\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const onButtonClick = async (e, id) => {\n    setIsLoading(true);\n    try {\n      await dispatch(deleteContact(id));\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <ListItem>\n      <Flex\n        // alignItems=\"center\"\n        // justifyContent=\"center\"\n        justify=\"space-between\"\n        gap={4}\n      >\n        <Box display=\"flex\" alignItems=\"center\">\n          <Text as=\"span\" maxWidth={['70px', '300px', '400px']} noOfLines={1}>\n            {name}\n          </Text>\n          <Text as=\"span\" maxWidth={['140px', '300px', '400px']} noOfLines={1}>\n            : {number}\n          </Text>\n        </Box>\n\n        <IconButton\n          type=\"button\"\n          onClick={e => onButtonClick(e, id)}\n          aria-label=\"Delete\"\n          isLoading={isLoading}\n          icon={<DeleteIcon />}\n        />\n      </Flex>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { Flex, List } from '@chakra-ui/react';\nimport { ContactItem } from 'components/Contacts/ContactItem';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.value);\n  const filter = useSelector(state => state.filter.value);\n\n  const contactsFil = useMemo(\n    () =>\n      filter\n        ? contacts.filter(({ name }) =>\n            name.toLowerCase().includes(filter.toLowerCase())\n          )\n        : contacts,\n    [contacts, filter]\n  );\n  return (\n    <Flex\n      minWidth=\"max-content\"\n      // alignItems=\"center\"\n      // justifyContent=\"center\"\n\n      gap={2}\n      flexDirection=\"column\"\n      \n    >\n      {contactsFil && (\n        <List spacing={4}>\n          {contactsFil.map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n        </List>\n      )}\n    </Flex>\n  );\n};\n","import { Flex, FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFiltre } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filter.value);\n  const dispatch = useDispatch();\n\n  return (\n    <Flex\n      minWidth=\"max-content\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      gap={2}\n      flexDirection=\"column\"\n      marginBottom={4}\n    >\n      <FormControl w=\"inherit\">\n        <FormLabel>Find contacts by name</FormLabel>\n        <Input\n          w={[null, 200, 300, 400]}\n          value={filter}\n          onChange={e => dispatch(changeFiltre(e.target.value))}\n          type=\"text\"\n          name=\"filter\"\n          title=\"filter\"\n          required\n        />\n      </FormControl>\n    </Flex>\n  );\n};\n","import { Section } from 'components/Section/Section';\nimport { Phonebook } from 'components/Phonebook/Phonebook';\nimport { ContactList } from 'components/Contacts/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchAll } from 'redux/contacts/operations/fetchAll';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  \n  useEffect(() => {\n    isLoggedIn && dispatch(fetchAll());\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <Phonebook />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n};\n\nexport default Contacts;"],"names":["schema","yup","shape","name","matches","required","number","Phonebook","contacts","useSelector","state","value","dispatch","useDispatch","toast","useToast","useState","JSON","parse","window","localStorage","getItem","setName","setNumber","useEffect","setItem","stringify","changeForm","e","target","onSubmit","values","actions","toLowerCase","title","description","status","duration","isClosable","position","setSubmitting","addContact","resetForm","initialValues","validationSchema","props","onChange","minWidth","alignItems","justifyContent","gap","flexDirection","field","form","w","isInvalid","errors","touched","placeholder","type","pattern","isLoading","isSubmitting","ContactItem","contact","id","setIsLoading","onButtonClick","deleteContact","console","log","justify","display","as","maxWidth","noOfLines","onClick","icon","ContactList","filter","contactsFil","useMemo","includes","spacing","map","Filter","marginBottom","changeFiltre","isLoggedIn","auth","fetchAll","Section"],"sourceRoot":""}